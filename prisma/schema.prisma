generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String
  password      String?   // Optional for OAuth users
  createdAt     DateTime  @default(now())
  
  // OAuth related fields
  accounts      Account[]
  
  // Application relationships
  projects      Project[]
  messages      Message[]    // Direct relation to messages
  codes         Code[]       // Direct relation to codes
}

model Account {
  id                String  @id @default(cuid())
  userId           Int
  type             String
  provider         String
  providerAccountId String
  refresh_token    String? @db.Text
  access_token     String? @db.Text
  expires_at       Int?
  token_type       String?
  scope            String?
  id_token         String? @db.Text
  session_state    String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Project {
  id                 Int       @id @default(autoincrement())
  projectName        String
  projectDescription String
  createdAt         DateTime  @default(now())
  
  // Relations
  userId           Int
  user             User      @relation(fields: [userId], references: [id])
  messages         Message[]
  code             Code?     // One-to-one with Code
}

model Code {
  id        Int     @id @default(autoincrement())
  code      Json
  createdAt DateTime @default(now())
  
  // Relations
  projectId Int     @unique  // Makes it one-to-one with Project
  project   Project @relation(fields: [projectId], references: [id])
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
}

model Message {
  id        Int      @id @default(autoincrement())
  message   Json
  createdAt DateTime @default(now())
  
  // Relations
  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
}
